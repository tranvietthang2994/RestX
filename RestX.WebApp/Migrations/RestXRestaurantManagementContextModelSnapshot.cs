// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestX.WebApp.Models;

#nullable disable

namespace RestX.WebApp.Migrations.RestXRestaurantManagement
{
    [DbContext(typeof(RestXRestaurantManagementContext))]
    partial class RestXRestaurantManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestX.WebApp.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid?>("StaffId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Account__3214EC073932612C");

                    b.HasIndex("AdminId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StaffId");

                    b.HasIndex(new[] { "Username" }, "IX_Account_Username");

                    b.HasIndex(new[] { "Username" }, "UQ__Account__536C85E4698E81CD")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Admin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Admin__3214EC07380656D8");

                    b.HasIndex(new[] { "Email" }, "UQ__Admin__A9D10534835FB0A7")
                        .IsUnique();

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Category__3214EC074450655F");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id")
                        .HasName("PK__Customer__3214EC075989F835");

                    b.HasIndex("OwnerId");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Dish__3214EC07D92FFE6D");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FileId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Dish", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.DishIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__DishIngr__3214EC07330C4C3A");

                    b.HasIndex("DishId");

                    b.HasIndex("IngredientId");

                    b.ToTable("DishIngredient", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.File", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id")
                        .HasName("PK__File__3214EC07EB5FEA71");

                    b.ToTable("File", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CurrentQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Ingredie__3214EC072635B208");

                    b.HasIndex("OwnerId");

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.IngredientExport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Ingredie__3214EC07A61E35BB");

                    b.HasIndex("IngredientId");

                    b.HasIndex("OrderDetailId");

                    b.HasIndex(new[] { "Time" }, "IX_IngredientExport_Time");

                    b.ToTable("IngredientExport", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.IngredientImport", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Ingredie__3214EC0795025CD8");

                    b.HasIndex("IngredientId");

                    b.HasIndex("SupplierId");

                    b.HasIndex(new[] { "Time" }, "IX_IngredientImport_Time");

                    b.ToTable("IngredientImport", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Order__3214EC0769715AE0");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TableId");

                    b.HasIndex(new[] { "Time" }, "IX_Order_Time");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3214EC07A0295A6F");

                    b.HasIndex("DishId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__OrderSta__3214EC0771C03BF7");

                    b.ToTable("OrderStatus", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Information")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Owner__3214EC071EC6C349");

                    b.HasIndex("FileId");

                    b.ToTable("Owner", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Time")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Payment__3214EC07E0A31845");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex(new[] { "Time" }, "IX_Payment_Time");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.PaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__PaymentM__3214EC079192C53D");

                    b.ToTable("PaymentMethod", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Staff__3214EC07249ED879");

                    b.HasIndex("FileId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Supplier__3214EC074D1A33ED");

                    b.HasIndex("OwnerId");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Qrcode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("QRCode");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.Property<int>("TableStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Table__3214EC0766A28536");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TableStatusId");

                    b.HasIndex(new[] { "Qrcode" }, "IX_Table_QRCode");

                    b.HasIndex(new[] { "Qrcode" }, "UQ__Table__5B869AD96220ED30")
                        .IsUnique();

                    b.ToTable("Table", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.TableStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__TableSta__3214EC074A7DCAE8");

                    b.ToTable("TableStatus", (string)null);
                });

            modelBuilder.Entity("RestX.WebApp.Models.Account", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Admin", "Admin")
                        .WithMany("Accounts")
                        .HasForeignKey("AdminId")
                        .HasConstraintName("FK__Account__AdminId__6A85CC04");

                    b.HasOne("RestX.WebApp.Models.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK__Account__OwnerId__6B79F03D");

                    b.HasOne("RestX.WebApp.Models.Staff", "Staff")
                        .WithMany("Accounts")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Account__StaffId__6C6E1476");

                    b.Navigation("Admin");

                    b.Navigation("Owner");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Customer", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Owner", "Owner")
                        .WithMany("Customers")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK__Customer__OwnerI__7132C993");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Dish", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Category", "Category")
                        .WithMany("Dishes")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Dish__CategoryId__00750D23");

                    b.HasOne("RestX.WebApp.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .IsRequired()
                        .HasConstraintName("FK__Dish__FileId__7F80E8EA");

                    b.HasOne("RestX.WebApp.Models.Owner", "Owner")
                        .WithMany("Dishes")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Dish__OwnerId__7E8CC4B1");

                    b.Navigation("Category");

                    b.Navigation("File");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RestX.WebApp.Models.DishIngredient", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Dish", "Dish")
                        .WithMany("DishIngredients")
                        .HasForeignKey("DishId")
                        .IsRequired()
                        .HasConstraintName("FK__DishIngre__DishI__21D600EE");

                    b.HasOne("RestX.WebApp.Models.Ingredient", "Ingredient")
                        .WithMany("DishIngredients")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__DishIngre__Ingre__22CA2527");

                    b.Navigation("Dish");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Ingredient", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Owner", "Owner")
                        .WithMany("Ingredients")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Owner__1B29035F");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RestX.WebApp.Models.IngredientExport", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Ingredient", "Ingredient")
                        .WithMany("IngredientExports")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Ingre__269AB60B");

                    b.HasOne("RestX.WebApp.Models.OrderDetail", "OrderDetail")
                        .WithMany("IngredientExports")
                        .HasForeignKey("OrderDetailId")
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Order__278EDA44");

                    b.Navigation("Ingredient");

                    b.Navigation("OrderDetail");
                });

            modelBuilder.Entity("RestX.WebApp.Models.IngredientImport", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Ingredient", "Ingredient")
                        .WithMany("IngredientImports")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Ingre__2B5F6B28");

                    b.HasOne("RestX.WebApp.Models.Supplier", "Supplier")
                        .WithMany("IngredientImports")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Suppl__2C538F61");

                    b.Navigation("Ingredient");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Order", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__CustomerI__07220AB2");

                    b.HasOne("RestX.WebApp.Models.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__OrderStat__09FE775D");

                    b.HasOne("RestX.WebApp.Models.Owner", "Owner")
                        .WithMany("Orders")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__OwnerId__090A5324");

                    b.HasOne("RestX.WebApp.Models.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("FK__Order__TableId__08162EEB");

                    b.Navigation("Customer");

                    b.Navigation("OrderStatus");

                    b.Navigation("Owner");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("RestX.WebApp.Models.OrderDetail", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Dish", "Dish")
                        .WithMany("OrderDetails")
                        .HasForeignKey("DishId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__DishI__0FB750B3");

                    b.HasOne("RestX.WebApp.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__0EC32C7A");

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Owner", b =>
                {
                    b.HasOne("RestX.WebApp.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .IsRequired()
                        .HasConstraintName("FK__Owner__FileId__7F80E8EA");

                    b.Navigation("File");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Payment", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__OrderId__16644E42");

                    b.HasOne("RestX.WebApp.Models.PaymentMethod", "PaymentMethod")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethodId")
                        .IsRequired()
                        .HasConstraintName("FK__Payment__Payment__1758727B");

                    b.Navigation("Order");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Staff", b =>
                {
                    b.HasOne("RestX.WebApp.Models.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .IsRequired()
                        .HasConstraintName("FK__Staff__FileId__7F80E8EA");

                    b.HasOne("RestX.WebApp.Models.Owner", "Owner")
                        .WithMany("Staff")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK__Staff__OwnerId__64CCF2AE");

                    b.Navigation("File");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Supplier", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Owner", "Owner")
                        .WithMany("Suppliers")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Supplier__OwnerI__1EF99443");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Table", b =>
                {
                    b.HasOne("RestX.WebApp.Models.Owner", "Owner")
                        .WithMany("Tables")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Table__OwnerId__77DFC722");

                    b.HasOne("RestX.WebApp.Models.TableStatus", "TableStatus")
                        .WithMany("Tables")
                        .HasForeignKey("TableStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Table__TableStat__78D3EB5B");

                    b.Navigation("Owner");

                    b.Navigation("TableStatus");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Admin", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Category", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Dish", b =>
                {
                    b.Navigation("DishIngredients");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Ingredient", b =>
                {
                    b.Navigation("DishIngredients");

                    b.Navigation("IngredientExports");

                    b.Navigation("IngredientImports");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("RestX.WebApp.Models.OrderDetail", b =>
                {
                    b.Navigation("IngredientExports");
                });

            modelBuilder.Entity("RestX.WebApp.Models.OrderStatus", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Owner", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Customers");

                    b.Navigation("Dishes");

                    b.Navigation("Ingredients");

                    b.Navigation("Orders");

                    b.Navigation("Staff");

                    b.Navigation("Suppliers");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("RestX.WebApp.Models.PaymentMethod", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Staff", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Supplier", b =>
                {
                    b.Navigation("IngredientImports");
                });

            modelBuilder.Entity("RestX.WebApp.Models.Table", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("RestX.WebApp.Models.TableStatus", b =>
                {
                    b.Navigation("Tables");
                });
#pragma warning restore 612, 618
        }
    }
}
