@model RestX.WebApp.Models.ViewModels.TableListViewModel

@{
    ViewData["Title"] = "Tables Management";
    Layout = "~/Views/Shared/_OwnerLayout.cshtml";
    var tableStatuses = ViewBag.TableStatuses as List<RestX.WebApp.Models.TableStatus>;
}

<style>
    .text-shadow {
        text-shadow: 1px 1px 2px #00000055;
    }

    .table-card:hover, .table-card:focus {
        transform: translateY(-6px) scale(1.04);
        box-shadow: 0 8px 32px 0 rgba(44,62,80,.18);
        outline: 2px solid #ff9800;
    }

    .owner-btn-danger {
        background: #f44336;
        color: #fff;
    }

    .owner-btn-primary {
        background: linear-gradient(90deg,#ff9800,#ffc107) !important;
        color: #fff !important;
    }

    .owner-btn-secondary {
        background: #fff !important;
        color: #333 !important;
        border: 1.5px solid #e0e0e0 !important;
    }

    .modal-content {
        border-radius: 2rem !important;
    }

    .form-control-lg, .form-select-lg {
        font-size: 1.15rem;
        padding: 0.75rem 1.1rem;
    }
</style>

<div class="owner-fade-in">
    <div class="owner-page-header d-flex align-items-center justify-content-between mb-4">
        <div class="d-flex align-items-center gap-3">
            <span class="d-inline-flex align-items-center justify-content-center rounded-3" style="background:linear-gradient(135deg,#ff9800,#ffb74d);width:48px;height:48px;">
                <i class="bi bi-grid-1x2-fill fs-2 text-white"></i>
            </span>
            <h1 class="owner-page-title fw-bold mb-0" style="font-size:2.2rem;">Tables Management</h1>
        </div>
        <button class="owner-btn owner-btn-primary shadow-lg" id="btnAddTable" data-bs-toggle="modal" data-bs-target="#addTableModal"
                style="background:linear-gradient(90deg,#ff9800,#ffc107);border:none;font-weight:600;font-size:1.1rem;min-width:150px;">
            <i class="bi bi-plus-lg me-2"></i>
            Add Table
        </button>
    </div>

    <div class="owner-card p-4" style="background:#fff;border-radius:24px;box-shadow:0 4px 32px 0 rgba(44,62,80,.10);">
        <div class="container-fluid">
            <div class="row g-4">
                @foreach (var table in Model.Tables)
                {
                    var color = table.TableStatus?.Name switch
                    {
                        "Available" => "#43b26c",
                        "Occupied" => "#f44336",
                        "Reserved" => "#ff9800",
                        _ => "#bdbdbd"
                    };
                    <div class="col-12 col-sm-6 col-md-3">
                        <div class="table-card card border-0 shadow-sm h-100 d-flex align-items-center justify-content-center"
                             style="background:@color;border-radius:18px;min-height:140px;cursor:pointer;transition:transform .12s,box-shadow .12s;"
                             role="button"
                             tabindex="0"
                             aria-label="Table @table.TableNumber"
                             data-bs-toggle="modal"
                             data-bs-target="#tableDetailModal"
                             data-table-id="@table.Id"
                             data-table-number="@table.TableNumber"
                             data-table-statusid="@table.TableStatusId"
                             data-table-active="@(table.IsActive == true ? "true" : "false")"
                             data-table-qrcode="@table.Qrcode"
                             data-table-createat="@table.CreateAt"
                             data-table-updateat="@table.UpdateAt">
                            <span class="fw-bold fs-3 text-white text-shadow">Table @table.TableNumber</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Modal for Adding New Table -->
<div class="modal fade" id="addTableModal" tabindex="-1" aria-labelledby="addTableModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="addTableForm">
                <div class="modal-header border-0 pb-0">
                    <h4 class="modal-title fw-bold" id="addTableModalLabel">
                        <i class="bi bi-plus-circle me-2" style="color: #ff9800;"></i>
                        Add New Table
                    </h4>
                    <button type="button" class="btn-close fs-4" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body px-4 pt-3 pb-0">
                    <div class="mb-4">
                        <label for="addTableNumber" class="form-label fw-semibold">
                            <i class="bi bi-hash me-1"></i>
                            Table Number *
                        </label>
                        <input type="number" class="form-control form-control-lg" id="addTableNumber" name="TableNumber" required min="1" placeholder="Enter table number" />
                    </div>
                    <div class="mb-4">
                        <label for="addTableStatus" class="form-label fw-semibold">
                            <i class="bi bi-circle-fill me-1"></i>
                            Status
                        </label>
                        <select class="form-select form-select-lg" id="addTableStatus" name="TableStatusId">
                            @if (tableStatuses != null)
                            {
                                foreach (var status in tableStatuses)
                                {
                                    if (status.Name == "Available")
                                    {
                                        <option value="@status.Id" selected>@status.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@status.Id">@status.Name</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-4 d-flex align-items-center gap-3">
                        <label class="form-label fw-semibold mb-0" for="addIsActive">
                            <i class="bi bi-toggle-on me-1"></i>
                            Active
                        </label>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="addIsActive" name="IsActive" checked />
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0 pt-0 pb-4 px-4 d-flex justify-content-end">
                    <div class="d-flex gap-2">
                        <button type="button" class="owner-btn owner-btn-secondary d-flex align-items-center gap-2 px-4 py-2" data-bs-dismiss="modal">
                            <i class="bi bi-x-lg"></i> Cancel
                        </button>
                        <button type="submit" class="owner-btn owner-btn-primary d-flex align-items-center gap-2 px-4 py-2">
                            <i class="bi bi-check-lg"></i> Add Table
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal for Table Detail (Edit) -->
<div class="modal fade" id="tableDetailModal" tabindex="-1" aria-labelledby="tableDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form id="tableDetailForm">
                <div class="modal-header border-0 pb-0">
                    <h4 class="modal-title fw-bold" id="tableDetailModalLabel">Table Detail</h4>
                    <button type="button" class="btn-close fs-4" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body px-4 pt-3 pb-0" id="tableDetailContent">
                    <input type="hidden" id="detailTableId" name="Id" />
                    <input type="hidden" id="detailQrcodeInput" name="Qrcode" />
                    <div class="mb-4">
                        <label for="detailTableNumber" class="form-label fw-semibold">Table Number</label>
                        <input type="number" class="form-control form-control-lg" id="detailTableNumber" name="TableNumber" required min="1" />
                    </div>
                    <div class="mb-4">
                        <label for="detailTableStatus" class="form-label fw-semibold">Status</label>
                        <select class="form-select form-select-lg" id="detailTableStatus" name="TableStatusId">
                            @if (tableStatuses != null)
                            {
                                foreach (var status in tableStatuses)
                                {
                                    <option value="@status.Id">@status.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-4 d-flex align-items-center gap-3">
                        <label class="form-label fw-semibold mb-0" for="detailIsActive">Active</label>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="detailIsActive" name="IsActive" />
                        </div>
                    </div>
                    <div class="mb-2"><strong>QR Code:</strong> <span id="detailQrcode" class="text-muted"></span></div>
                    <div class="mb-2"><strong>Created At:</strong> <span id="detailCreateAt" class="text-muted"></span></div>
                    <div class="mb-2"><strong>Updated At:</strong> <span id="detailUpdateAt" class="text-muted"></span></div>
                </div>
                <div class="modal-footer border-0 pt-0 pb-4 px-4 d-flex justify-content-between">
                    <button type="button" class="owner-btn owner-btn-danger d-flex align-items-center gap-2 px-4 py-2" id="btnDeleteTable">
                        <i class="bi bi-trash"></i> Delete
                    </button>
                    <div class="d-flex gap-2">
                        <button type="button" class="owner-btn owner-btn-secondary d-flex align-items-center gap-2 px-4 py-2" data-bs-dismiss="modal">
                            <i class="bi bi-x-lg"></i> Cancel
                        </button>
                        <button type="submit" class="owner-btn owner-btn-primary d-flex align-items-center gap-2 px-4 py-2">
                            <i class="bi bi-check-lg"></i> Save
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let currentTableId = null;

        document.addEventListener('DOMContentLoaded', function () {
            // Show detail modal and fill form
            document.querySelectorAll('[data-bs-target="#tableDetailModal"]').forEach(function (card) {
                card.addEventListener('click', function () {
                    currentTableId = card.getAttribute('data-table-id');
                    document.getElementById('detailTableId').value = currentTableId;
                    document.getElementById('detailTableNumber').value = card.getAttribute('data-table-number');
                    document.getElementById('detailTableStatus').value = card.getAttribute('data-table-statusid');
                    document.getElementById('detailIsActive').checked = card.getAttribute('data-table-active') === "true";
                    document.getElementById('detailQrcode').innerText = card.getAttribute('data-table-qrcode');
                    document.getElementById('detailQrcodeInput').value = card.getAttribute('data-table-qrcode');
                    document.getElementById('detailCreateAt').innerText = card.getAttribute('data-table-createat');
                    document.getElementById('detailUpdateAt').innerText = card.getAttribute('data-table-updateat');
                });
            });

            // Add new table form submission
            document.getElementById('addTableForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(this);
                formData.set('IsActive', document.getElementById('addIsActive').checked);

                fetch('/Table/Upsert', {
                    method: 'POST',
                    body: formData
                })
                .then(res => res.json())
                .then(res => {
                    if (res.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Table added successfully!',
                            confirmButtonColor: '#ff9800'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: res.message || 'Failed to add table!'
                        });
                    }
                })
                .catch(() => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error adding table!'
                    });
                });
            });

            // Save (update) table
            document.getElementById('tableDetailForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(this);
                formData.set('IsActive', document.getElementById('detailIsActive').checked);

                fetch('/Table/Upsert', {
                    method: 'POST',
                    body: formData
                })
                .then(res => res.json())
                .then(res => {
                    if (res.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Table updated successfully!',
                            confirmButtonColor: '#ff9800'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: res.message || 'Update failed!'
                        });
                    }
                })
                .catch(() => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error updating table!'
                    });
                });
            });

            // Delete table
            document.getElementById('btnDeleteTable').addEventListener('click', function () {
                if (!currentTableId) return;
                
                Swal.fire({
                    title: 'Confirm Delete',
                    text: 'Are you sure you want to delete this table?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#f44336',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Delete',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch('/Table/Delete/' + currentTableId, { method: 'DELETE' })
                            .then(res => res.json())
                            .then(res => {
                                if (res.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Deleted!',
                                        text: 'Table has been deleted.',
                                        confirmButtonColor: '#ff9800'
                                    }).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: res.message || 'Delete failed!'
                                    });
                                }
                            })
                            .catch(() => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Error deleting table!'
                                });
                            });
                    }
                });
            });

            // Reset add table form when modal is shown
            document.getElementById('addTableModal').addEventListener('show.bs.modal', function () {
                document.getElementById('addTableForm').reset();
                document.getElementById('addIsActive').checked = true;
                // Set default status to "Available"
                const statusSelect = document.getElementById('addTableStatus');
                for (let option of statusSelect.options) {
                    if (option.text === 'Available') {
                        option.selected = true;
                        break;
                    }
                }
            });
        });
    </script>
}